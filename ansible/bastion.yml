---
- name: Prepare Bastion Hosts
  hosts: bastion
  remote_user: ec2-user
  become: true

#! DO NOT FORGET TO DELETE DEFAULTS
  vars_prompt:
  - name: "RHN_USERNAME"
    prompt: "Enter Red Hat username"
    default: "{{ lookup('env','RHN_USERNAME') }}"
    private: no
  - name: "RHN_PASSWORD"
    prompt: "Enter  Red Hat password"
    default: "{{ lookup('env','RHN_PASSWORD') }}"
    private: yes
  - name: "AWS_ACCESS_KEY_ID"
    prompt: "Enter AWS access key"
    default: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    private: no
  - name: "AWS_SECRET_ACCESS_KEY"
    prompt: "Enter AWS secret key"
    default: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    private: no
  - name: "DNS_PREFIX"
    prompt: "Enter DNS prefix for Openshift domain"
    default: "demo.li9.com"
    private: no

  vars:
    ssh_key: "~/.ssh/id_rsa"
    dns_prefix: "{{DNS_PREFIX}}"

  environment:
    AWS_ACCESS_KEY_ID: "{{AWS_ACCESS_KEY_ID}}"
    AWS_SECRET_ACCESS_KEY: "{{AWS_SECRET_ACCESS_KEY}}"

  tasks:
  - name: Set hostnames
    hostname:
      name: '{{ inventory_hostname }}'
  - name: Register system
    redhat_subscription:
      username: '{{ RHN_USERNAME }}'
      password: '{{ RHN_PASSWORD }}'
      auto_attach: true
      state: present

  - name: Installing epel package
    shell: rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm    
    ignore_errors: True

  - name: Install basic packages
    yum:
      name: '{{item}}'
    with_items:
      - git
      - wget
      - nano
      - ansible
      - python2-pip
      - python34-pip
      - python-passlib
      - httpd-tools
      - java-1.8.0-openjdk-headless

  - name: downloading ansible-openshift source code
    git:
      repo: https://github.com/openshift/openshift-ansible.git
      dest: /opt/openshift-ansible
      version: release-3.9

  - name: downloading acme.sh source code
    git:
      repo: https://github.com/Neilpang/acme.sh.git
      dest: /opt/acme.sh
      version: master

  - name: downloading ocp-tf source code
    git:
      repo: https://github.com/flashdumper/ocp-tf.git
      dest: /opt/ocp-tf
      version: master

  - name: Generating Lets Encrypt Certificates
    shell: "{{item}}"
    args:
        chdir: /opt/acme.sh
    with_items:
      - "./acme.sh --issue -d apps.{{dns_prefix}} -d *.apps.{{dns_prefix}}  -d registry.{{dns_prefix}} --dns dns_aws --force"
      - "./acme.sh --issue -d console.{{dns_prefix}} --dns dns_aws --force"
      - "./acme.sh --issue -d registry.{{dns_prefix}} --dns dns_aws --force"
    ignore_errors: True

  - name: Verify Wildcard Certificates
    shell: "openssl x509 -text -noout -in ~/.acme.sh/*.apps.{{dns_prefix}}/*.apps.{{dns_prefix}} | grep DNS"
    register: reg_wildcard

  - name: Verify Wildcard Certificates
    shell: "openssl x509 -text -noout -in ~/.acme.sh/console.{{dns_prefix}}/console.{{dns_prefix}} | grep DNS"
    register: reg_console

  - name: Adjust ssh_config file
    blockinfile:
      path: ~/.ssh/config
      create: yes
      block: |
        Host *
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null

  - name: copy ssh keys
    copy:
      src: "{{item}}"
      dest: ~/.ssh/
      owner: root
      group: root
      mode: 0600
    with_items:
      - "{{ssh_key}}"
      - "{{ssh_key}}.pub"

  - name: Getting hosts ready
    shell: "{{item}}"
    args:
        chdir: /opt/ocp-tf
    with_items:
    - "ansible-playbook -i ansible/hosts_3.9 ansible/prepare_openshift_hosts.yml -e RHN_USERNAME={{RHN_USERNAME}} -e RHN_PASSWORD={{RHN_PASSWORD}}"

  - name: Running pre-requisites and installing OpenShift Cluster
    shell: "{{item}}"
    args:
        chdir: /opt/openshift-ansible
    with_items:
    - ansible-playbook -i /opt/ocp-tf/ansible/hosts_3.9 playbooks/prerequisites.yml -b
    - ansible-playbook -i /opt/ocp-tf/ansible/hosts_3.9 playbooks/deploy_cluster.yml -b

# COMPLETE UNINSTALL: ansible-playbook -i /opt/ocp-tf/ansible/hosts_3.9 playbooks/adhoc/uninstall.yml -b
# STORAGE UNINSTALL: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 -e "openshift_storage_glusterfs_wipe=true" playbooks/openshift-glusterfs/uninstall.yml
# REDEPLOY CERTS: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 playbooks/redeploy-certificates.yml -b
# RENEW CERTS: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 playbooks/openshift-checks/certificate_expiry/easy-mode.yaml -b
# DEPLOY STORAGE: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 playbooks/openshift-glusterfs/config.yml -b
