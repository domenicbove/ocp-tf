---
- name: Prepare Bastion Hosts
  hosts: bastion
  remote_user: ec2-user
  become: true

  vars_prompt:
  - name: "RHN_USERNAME"
    prompt: "Enter Red Hat username"
    default: "{{ lookup('env','RHN_USERNAME') }}"
    private: no
  - name: "RHN_PASSWORD"
    prompt: "Enter  Red Hat password"
    default: "{{ lookup('env','RHN_PASSWORD') }}"
    private: yes
  - name: "RHN_POOL"
    prompt: "Enter  Red Hat Subscription Pool ID"
    default: "8a85f98c60c2c2b40160c324e5d21d70"
    private: yes
  - name: "AWS_ACCESS_KEY_ID"
    prompt: "Enter AWS access key"
    default: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    private: no
  - name: "AWS_SECRET_ACCESS_KEY"
    prompt: "Enter AWS secret key"
    default: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    private: no
  - name: "DNS_PREFIX"
    prompt: "Enter DNS prefix for Openshift domain"
    default: "domenicbove.com"
    private: no

  tasks:
  - name: Set hostnames
    hostname:
      name: '{{ inventory_hostname }}'

  - name: Register system
    redhat_subscription:
      username: '{{ RHN_USERNAME }}'
      password: '{{ RHN_PASSWORD }}'
      pool: '{{ RHN_POOL }}'
      state: present
      force_register: yes

  - name: Disable all the repositories
    command: 'subscription-manager repos --disable="*"'
    ignore_errors: True

  - name: Enable OpenShift repositories
    command: 'subscription-manager repos \
              --enable=rhel-7-server-rpms \
              --enable=rhel-7-server-extras-rpms \
              --enable=rhel-7-server-ose-3.11-rpms \
              --enable=rhel-7-server-ansible-2.6-rpms'

  - name: Install Packages
    yum:
      name:
        - git
        - openshift-ansible
      state: installed

  - name: downloading acme.sh source code
    git:
      repo: https://github.com/Neilpang/acme.sh.git
      dest: /opt/acme.sh
      version: master
    tags: certs

  - name: Generating Lets Encrypt Certificates
    shell: "/opt/acme.sh/acme.sh --issue -d *.apps.{{ DNS_PREFIX }} --dns dns_aws --force"
    ignore_errors: True
    tags: certs

  - name: Generating Lets Encrypt Certificates
    shell: "/opt/acme.sh/acme.sh --issue -d apps.{{ DNS_PREFIX }} -d registry.{{ DNS_PREFIX }} -d console.{{ DNS_PREFIX }} --dns dns_aws --force"
    ignore_errors: True
    tags: certs

  - name: Verify Wildcard Certificates
    shell: "openssl x509 -text -noout -in ~/.acme.sh/*.apps.{{ DNS_PREFIX }}/*.apps.{{ DNS_PREFIX }}.cer | grep DNS"
    tags: certs

  - name: Verify Wildcard Certificates
    shell: "openssl x509 -text -noout -in ~/.acme.sh/console.{{ DNS_PREFIX }}/console.{{ DNS_PREFIX }}.cer | grep DNS"
    tags: certs

  - name: Adjust ssh_config file
    blockinfile:
      path: ~/.ssh/config
      create: yes
      block: |
        Host *
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null

  - name: copy ssh keys
    copy:
      src: "{{ item }}"
      dest: ~/.ssh/
      owner: root
      group: root
      mode: 0600
    with_items:
      - "~/.ssh/id_rsa"
      - "~/.ssh/id_rsa.pub"

  - name: Copy in hosts file
    copy:
      src: "{{ item }}"
      src: hosts
      dest: /opt/hosts
      owner: root
      group: root
      mode: 0600
    with_items:
      - hosts.yml
      - prepare_openshift_hosts.yml
