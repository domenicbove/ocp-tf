---
- name: Prepare Bastion Hosts
  hosts: bastion
  remote_user: ec2-user
  become: true

  vars_prompt:
  - name: "RHN_USERNAME"
    prompt: "Enter Red Hat username"
    default: "{{ lookup('env','RHN_USERNAME') }}"
    private: no
  - name: "RHN_PASSWORD"
    prompt: "Enter  Red Hat password"
    default: "{{ lookup('env','RHN_PASSWORD') }}"
    private: yes
  - name: "RHN_POOL"
    prompt: "Enter  Red Hat Subscription Pool ID"
    default: "8a85f98c60c2c2b40160c324e5d21d70"
    private: yes
  - name: "AWS_ACCESS_KEY_ID"
    prompt: "Enter AWS access key"
    default: "{{ lookup('env','AWS_ACCESS_KEY_ID') }}"
    private: no
  - name: "AWS_SECRET_ACCESS_KEY"
    prompt: "Enter AWS secret key"
    default: "{{ lookup('env','AWS_SECRET_ACCESS_KEY') }}"
    private: no
  - name: "DNS_PREFIX"
    prompt: "Enter DNS prefix for Openshift domain"
    default: "domenicbove.com"
    private: no

  vars:
    ssh_key: "~/.ssh/id_rsa"
    dns_prefix: "{{DNS_PREFIX}}"

  environment:
    AWS_ACCESS_KEY_ID: "{{AWS_ACCESS_KEY_ID}}"
    AWS_SECRET_ACCESS_KEY: "{{AWS_SECRET_ACCESS_KEY}}"

  tasks:
  - name: Set hostnames
    hostname:
      name: '{{ inventory_hostname }}'

  # - name: Register system
  #   redhat_subscription:
  #     username: '{{ RHN_USERNAME }}'
  #     password: '{{ RHN_PASSWORD }}'
  #     pool: '{{ RHN_POOL }}'
  #     #auto_attach: true
  #     state: present
  #     force_register: yes
  #
  # - name: Disable all the repositories
  #   command: 'subscription-manager repos --disable="*"'
  #   ignore_errors: True
  #
  # - name: Enable OpenShift repositories
  #   command: 'subscription-manager repos \
  #             --enable=rhel-7-server-rpms \
  #             --enable=rhel-7-server-extras-rpms \
  #             --enable=rhel-7-server-ose-3.11-rpms \
  #             --enable=rhel-7-server-ansible-2.6-rpms'
  #
  # - name: Install Packages
  #   yum:
  #     name:
  #       - git
  #       - openshift-ansible
  #     state: installed

  # - name: downloading acme.sh source code
  #   git:
  #     repo: https://github.com/Neilpang/acme.sh.git
  #     dest: /opt/acme.sh
  #     version: master
  #
  # - name: Generating Lets Encrypt Certificates
  #   shell: "/opt/acme.sh/acme.sh --issue -d *.apps.{{dns_prefix}} --dns dns_aws --force"
  #   ignore_errors: True
  #
  # - name: Generating Lets Encrypt Certificates
  #   shell: "/opt/acme.sh/acme.sh --issue -d apps.{{dns_prefix}} -d registry.{{dns_prefix}} -d console.{{dns_prefix}} --dns dns_aws --force"
  #   ignore_errors: True
  #
  # - name: Verify Wildcard Certificates
  #   shell: "openssl x509 -text -noout -in ~/.acme.sh/*.apps.{{dns_prefix}}/*.apps.{{dns_prefix}}.cer | grep DNS"
  #   register: reg_wildcard
  #
  # - name: Verify Wildcard Certificates
  #   shell: "openssl x509 -text -noout -in ~/.acme.sh/console.{{dns_prefix}}/console.{{dns_prefix}}.cer | grep DNS"
  #   register: reg_console

  - name: Adjust ssh_config file
    blockinfile:
      path: ~/.ssh/config
      create: yes
      block: |
        Host *
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null

  - name: copy ssh keys
    copy:
      src: "{{item}}"
      dest: ~/.ssh/
      owner: root
      group: root
      mode: 0600
    with_items:
      - "{{ssh_key}}"
      - "{{ssh_key}}.pub"
  #
  # - file:
  #     path: /opt/ocp-tf/ansible/
  #     state: directory
  #
  - name: Copy in hosts file
    copy:
      src: hosts
      dest: /opt/hosts
      owner: root
      group: root
      mode: 0600

  - name: Copy in prepare_openshift_hosts
    copy:
      src: prepare_openshift_hosts.yml
      dest: /opt/prepare_openshift_hosts.yml
      owner: root
      group: root
      mode: 0600
  #
  # - name: Getting hosts ready
  #   shell: "ansible-playbook -i /opt/ocp-tf/ansible/hosts /opt/ocp-tf/ansible/prepare_openshift_hosts.yml -e RHN_USERNAME={{RHN_USERNAME}} -e RHN_PASSWORD={{RHN_PASSWORD}} -e RHN_POOL={{RHN_POOL}}"
  #
  # - name: Running pre-requisites
  #   shell: ansible-playbook -i /opt/ocp-tf/ansible/hosts /opt/openshift-ansible/playbooks/prerequisites.yml -b
  #
  # - name: Run Installing OpenShift Cluster
  #   shell: ansible-playbook -i /opt/ocp-tf/ansible/hosts /opt/openshift-ansible/playbooks/deploy_cluster.yml -b


# COMPLETE UNINSTALL: ansible-playbook -i /opt/ocp-tf/ansible/hosts_3.9 playbooks/adhoc/uninstall.yml -b
# STORAGE UNINSTALL: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 -e "openshift_storage_glusterfs_wipe=true" playbooks/openshift-glusterfs/uninstall.yml
# REDEPLOY CERTS: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 playbooks/redeploy-certificates.yml -b
# RENEW CERTS: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 playbooks/openshift-checks/certificate_expiry/easy-mode.yaml -b
# DEPLOY STORAGE: ansible-playbook -i  /opt/ocp-tf/ansible/hosts_3.9 playbooks/openshift-glusterfs/config.yml -b
